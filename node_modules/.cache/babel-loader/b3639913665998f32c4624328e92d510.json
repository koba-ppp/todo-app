{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kobayashiteppei/Desktop/react_firebase_typescript_todo/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { FormControl, List, TextField } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport styles from './App.module.css';\nimport { db } from \"./firebase\";\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\nimport TaskItem from './TaskItem';\nimport { makeStyles } from \"@material-ui/styles\";\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 30,\n    marginBottom: 20\n  },\n  list: {\n    margin: \"auto\",\n    width: \"40%\"\n  }\n});\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: \"\",\n    title: \"\"\n  }]); //複数のオブジェクトを内包した配列\n\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    const unSub = db.collection(\"tasks\").onSnapshot(snapshot => {\n      setTasks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        title: doc.data().title\n      })));\n    }); //データベースに何らかの変化があったときにsnapshotが起動して内容を取得してくれる\n\n    return () => unSub();\n  }, []);\n\n  const newTask = e => {\n    db.collection(\"tasks\").add({\n      title: input\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app_root,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App by React/Firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        InputLabelProps: {\n          shrink: true\n        },\n        label: \"New task ?\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !input,\n      onClick: newTask,\n      className: styles.app_icon,\n      children: /*#__PURE__*/_jsxDEV(AddToPhotosIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task.id,\n        title: task.title\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"S3tZN9So5aiLflS2qoRrfa7pj0c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kobayashiteppei/Desktop/react_firebase_typescript_todo/src/App.tsx"],"names":["FormControl","List","TextField","React","useState","useEffect","styles","db","AddToPhotosIcon","TaskItem","makeStyles","useStyles","field","marginTop","marginBottom","list","margin","width","App","tasks","setTasks","id","title","input","setInput","unSub","collection","onSnapshot","snapshot","docs","map","doc","data","newTask","e","add","app_root","shrink","target","value","app_icon","task"],"mappings":"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","sourcesContent":["import { FormControl, List, TextField } from '@material-ui/core';\nimport React,{ useState, useEffect } from 'react';\nimport styles from './App.module.css';\nimport {db} from \"./firebase\"; \nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\nimport TaskItem from './TaskItem';\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 30,\n    marginBottom: 20,\n  },\n  list: {\n    margin: \"auto\",\n    width: \"40%\",\n  },\n})\n\nconst App: React.FC = () => {\n\n  const [tasks, setTasks] = useState([{id:\"\",title:\"\"}]); //複数のオブジェクトを内包した配列\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    const unSub = db.collection(\"tasks\").onSnapshot((snapshot) => {\n      setTasks(\n        snapshot.docs.map((doc) => ({id: doc.id, title: doc.data().title}))\n      );\n    });  //データベースに何らかの変化があったときにsnapshotが起動して内容を取得してくれる\n    return ()=> unSub();\n  },[]);\n\n  const newTask = (e: React.DOMAttributes<HTMLButtonElement>) => {\n    db.collection(\"tasks\").add({title: input});\n    setInput(\"\");\n  }\n\n  return (\n    <div className={styles.app_root}>\n      <h1>Todo App by React/Firebase</h1>\n      <FormControl>\n        <TextField \n        InputLabelProps={{\n          shrink: true,\n        }}\n        label=\"New task ?\"\n        value={input}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => \n          setInput(e.target.value)\n        }\n        />\n      </FormControl>\n      <button disabled={!input} onClick={newTask} className={styles.app_icon}>\n        <AddToPhotosIcon />\n      </button>\n      <List>\n        {tasks.map((task) => (\n          <TaskItem key={task.id} id={task.id} title={task.title} /> \n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}