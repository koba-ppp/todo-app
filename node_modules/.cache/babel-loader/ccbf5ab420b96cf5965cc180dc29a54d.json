{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/kobayashiteppei/Desktop/react_firebase_typescript_todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import styles from'./TaskItem.module.css';import{ListItem,TextField,Grid}from\"@material-ui/core\";import DeleteOutLinedIcon from\"@material-ui/icons/DeleteOutlineOutlined\";import EditOutLinedIcon from\"@material-ui/icons/EditOutlined\";import{db}from\"./firebase\";var TaskItem=function TaskItem(props){var _useState=useState(props.title),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var editTask=function editTask(){db.collection(\"tasks\").doc(props.id).set({title:title},{merge:true});};var deleteTask=function deleteTask(){db.collection(\"tasks\").doc(props.id).delete();};return/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"h2\",{children:props.title}),/*#__PURE__*/_jsx(Grid,{container:true,justify:\"flex-end\",children:/*#__PURE__*/_jsx(TextField,{InputLabelProps:{shrink:true},label:\"Edit task\",value:title,onChange:function onChange(e){return setTitle(e.target.value);}})}),/*#__PURE__*/_jsx(\"button\",{onClick:editTask,className:styles.taskitem_icon,children:/*#__PURE__*/_jsx(EditOutLinedIcon,{})}),/*#__PURE__*/_jsx(\"button\",{onClick:deleteTask,className:styles.taskitem_icon,children:/*#__PURE__*/_jsx(DeleteOutLinedIcon,{})})]});};export default TaskItem;","map":{"version":3,"sources":["/Users/kobayashiteppei/Desktop/react_firebase_typescript_todo/src/TaskItem.tsx"],"names":["React","useState","styles","ListItem","TextField","Grid","DeleteOutLinedIcon","EditOutLinedIcon","db","TaskItem","props","title","setTitle","editTask","collection","doc","id","set","merge","deleteTask","delete","shrink","e","target","value","taskitem_icon"],"mappings":"4QAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,OAAQC,QAAR,CAAkBC,SAAlB,CAA6BC,IAA7B,KAAwC,mBAAxC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,0CAA/B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,OAAQC,EAAR,KAAiB,YAAjB,CAOA,GAAMC,CAAAA,QAAyB,CAAG,QAA5BA,CAAAA,QAA4B,CAACC,KAAD,CAAW,eAEfT,QAAQ,CAACS,KAAK,CAACC,KAAP,CAFO,wCAElCA,KAFkC,eAE3BC,QAF2B,eAIzC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnBL,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BL,KAAK,CAACM,EAAjC,EAAqCC,GAArC,CAAyC,CAACN,KAAK,CAAEA,KAAR,CAAzC,CAAwD,CAACO,KAAK,CAAE,IAAR,CAAxD,EACH,CAFD,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBX,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BL,KAAK,CAACM,EAAjC,EAAqCI,MAArC,GACH,CAFD,CAKA,mBACI,MAAC,QAAD,yBACI,oBAAKV,KAAK,CAACC,KAAX,EADJ,cAEI,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,UAAxB,uBACI,KAAC,SAAD,EACA,eAAe,CAAE,CACbU,MAAM,CAAE,IADK,CADjB,CAIA,KAAK,CAAC,WAJN,CAKA,KAAK,CAAEV,KALP,CAMA,QAAQ,CAAE,kBAACW,CAAD,QAA4CV,CAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAApD,EANV,EADJ,EAFJ,cAYI,eAAQ,OAAO,CAAEX,QAAjB,CAA2B,SAAS,CAAEX,MAAM,CAACuB,aAA7C,uBACI,KAAC,gBAAD,IADJ,EAZJ,cAeI,eAAQ,OAAO,CAAEN,UAAjB,CAA6B,SAAS,CAAEjB,MAAM,CAACuB,aAA/C,uBACI,KAAC,kBAAD,IADJ,EAfJ,GADJ,CAqBH,CAlCD,CAoCA,cAAehB,CAAAA,QAAf","sourcesContent":["import React,{useState} from 'react';\nimport styles from './TaskItem.module.css';\nimport {ListItem, TextField, Grid} from \"@material-ui/core\";\nimport DeleteOutLinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport EditOutLinedIcon from \"@material-ui/icons/EditOutlined\";\nimport {db} from \"./firebase\";\n\ninterface PROPS {\n    id: string;\n    title: string;\n}\n\nconst TaskItem: React.FC<PROPS> = (props) => {\n\n    const [title, setTitle] = useState(props.title);\n\n    const editTask = () => {\n        db.collection(\"tasks\").doc(props.id).set({title: title},{merge: true});\n    };\n\n    const deleteTask = () => {\n        db.collection(\"tasks\").doc(props.id).delete();\n    }\n\n\n    return (\n        <ListItem>\n            <h2>{props.title}</h2>\n            <Grid container justify=\"flex-end\">\n                <TextField \n                InputLabelProps={{\n                    shrink: true,\n                }}\n                label=\"Edit task\"\n                value={title}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value)}\n                />\n            </Grid>\n            <button onClick={editTask} className={styles.taskitem_icon}>\n                <EditOutLinedIcon />\n            </button>\n            <button onClick={deleteTask} className={styles.taskitem_icon}>\n                <DeleteOutLinedIcon />\n            </button>\n        </ListItem>\n    )\n}\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}