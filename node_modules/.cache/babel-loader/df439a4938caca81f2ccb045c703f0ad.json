{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kobayashiteppei/Desktop/react_firebase_typescript_todo/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { db } from \"./firebase\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: \"\",\n    title: \"\"\n  }]); //複数のオブジェクトを内包した配列\n\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    const unSub = db.collection(\"tasks\").onSnapshot(snapshot => {\n      setTasks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        title: doc.data().title\n      })));\n    }); //データベースに何らかの変化があったときにsnapshotが起動して内容を取得してくれる\n\n    return () => unSub();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App by React/Firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.title\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"S3tZN9So5aiLflS2qoRrfa7pj0c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kobayashiteppei/Desktop/react_firebase_typescript_todo/src/App.tsx"],"names":["React","useState","useEffect","db","App","tasks","setTasks","id","title","input","setInput","unSub","collection","onSnapshot","snapshot","docs","map","doc","data","task"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,SAAQC,EAAR,QAAiB,YAAjB;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAC;AAACM,IAAAA,EAAE,EAAC,EAAJ;AAAOC,IAAAA,KAAK,EAAC;AAAb,GAAD,CAAD,CAAlC,CAF0B,CAE8B;;AACxD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,KAAK,GAAGR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAmCC,QAAD,IAAc;AAC5DR,MAAAA,QAAQ,CACNQ,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAACV,QAAAA,EAAE,EAAEU,GAAG,CAACV,EAAT;AAAaC,QAAAA,KAAK,EAAES,GAAG,CAACC,IAAJ,GAAWV;AAA/B,OAAV,CAAlB,CADM,CAAR;AAGD,KAJa,CAAd,CADc,CAKT;;AACL,WAAO,MAAKG,KAAK,EAAjB;AACD,GAPQ,EAOP,EAPO,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,KAAK,CAACW,GAAN,CAAWG,IAAD,iBACT;AAAA,gBAAmBA,IAAI,CAACX;AAAxB,OAASW,IAAI,CAACZ,EAAd;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtBD;;GAAMH,G;;KAAAA,G;AAwBN,eAAeA,GAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport './App.css';\nimport {db} from \"./firebase\"; \n\nconst App: React.FC = () => {\n\n  const [tasks, setTasks] = useState([{id:\"\",title:\"\"}]); //複数のオブジェクトを内包した配列\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    const unSub = db.collection(\"tasks\").onSnapshot((snapshot) => {\n      setTasks(\n        snapshot.docs.map((doc) => ({id: doc.id, title: doc.data().title}))\n      );\n    });  //データベースに何らかの変化があったときにsnapshotが起動して内容を取得してくれる\n    return ()=> unSub();\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <h1>Todo App by React/Firebase</h1>\n      {tasks.map((task) => (\n        <h3 key={task.id}>{task.title}</h3>\n      ))}\n      {/* <input type=\"text\" value={input} onChange={}></input> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}